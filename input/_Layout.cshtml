<!DOCTYPE html>
<html lang="en">
    <head>
        @Html.Partial("global-partials/_GoogleTag")
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=Edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        @{
            string title = @Document.ContainsKey(Keys.Title) ? $"Boxstarter | {Document.GetString(Keys.Title)}" : "Boxstarter";
            string description = "Repeatable, reboot resilient windows environment installations made easy using Chocolatey packages. When its time to repave either bare metal or virtualized instances, locally or on a remote machine, Boxstarter can automate both trivial and highly complex installations. Compatible with all Windows versions from Windows 7/2008 R2 forward.";
            string baseUrl = Context.GetLink().TrimEnd('/');
        }
        <meta name="description" content="@description" />
        @* Open Graph data *@
        <meta property="og:title" content="@title" />
        <meta property="og:description" content="@description" />
        <meta property="og:site_name" content="Boxstarter" />
        <meta property="og:type" content="product" />
        <meta property="og:image" content="https://img.chocolatey.org/social-share/boxstarter-dark-og.png" />
        <meta property="og:url" content="@baseUrl@Document.GetLink()" />
        @* Twitter Card data *@
        <meta name="twitter:card" content="summary_large_image">
        <meta name="twitter:site" content="@@chocolateynuget">
        <meta name="twitter:creator" content="@@chocolateynuget">
        @* Additional data *@
        <meta property="product:brand" content="Boxstarter" />
        <meta property="product:category" content="software" />
        @* Apple Touch and Favicon *@
        <link rel="shortcut icon" href="https://img.chocolatey.org/favicons/boxstarter/favicon.ico" type="image/x-icon" />
        <link rel="apple-touch-icon" href="https://img.chocolatey.org/favicons/boxstarter/apple-touch-icon.png" />
        <link rel="apple-touch-icon" sizes="152x152" href="https://img.chocolatey.org/favicons/boxstarter/apple-touch-icon-152x152.png" />
        <link rel="apple-touch-icon" sizes="167x167" href="https://img.chocolatey.org/favicons/boxstarter/apple-touch-icon-167x167.png" />
        <link rel="apple-touch-icon" sizes="180x180" href="https://img.chocolatey.org/favicons/boxstarter/apple-touch-icon-180x180.png" />
        <link rel="manifest" href="@baseUrl/site.webmanifest">
        @* CSS and JS *@
        <link rel="stylesheet" href='@Context.GetLink("/assets/css/boxstarter.min.purged.css")'>
        <script type="text/javascript" src='@Context.GetLink("/assets/js/theme-toggle.min.js")'></script>
        <title>@title</title>
    </head>
    <body class="chocolatey-docs boxstarter-org">
        <header>
            @Html.Partial("global-partials/_TopAlertBanner")
            <nav class="navbar navbar-expand-lg text-bg-body-secondary">
                <div class="container-fluid">
                    <a class="navbar-brand link-theme" href="/">
                        <img src='@Context.GetLink("https://img.chocolatey.org/logos/boxstarter-logo-sm.png")' alt="Boxstarter" width="70" height="61" class="d-inline-block align-text-middle">
                        Boxstarter
                    </a>
                    <div class="d-flex align-items-center justify-content-center">
                        <div class="d-flex me-3 d-lg-none">
                            <div>
                                @Html.Partial("global-partials/_ThemeToggle")
                            </div>
                        </div>
                        <button class="navbar-toggler link-theme" type="button" data-bs-toggle="collapse" data-bs-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                            <i class="fa-solid fa-bars"></i>
                        </button>
                    </div>
                    <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                        <ul class="navbar-nav ms-auto mb-2 mb-lg-0 align-items-lg-center">
                            <li class="nav-item">
                                <a class="nav-link link-theme px-lg-3" href='@Context.GetLink("/whyboxstarter")'>Docs</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link link-theme px-lg-3" href="https://github.com/chocolatey/boxstarter"><i class="fa-brands fa-github me-2"></i>GitHub</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link link-theme px-lg-3" href="https://ch0.co/community"><i class="fa-brands fa-discord me-2"></i>Discussion</a>
                            </li>
                            <li class="nav-item d-none d-lg-flex px-lg-3">
                                <div>
                                    @Html.Partial("global-partials/_ThemeToggle")
                                </div>
                            </li>
                            <li class="nav-item pt-2 pt-lg-0 ps-lg-3">
                                <a class="btn btn-primary d-block d-lg-inline-block" role="button" href='@Context.GetLink("/downloads/Boxstarter.3.0.3.zip")' download><i class="fa-solid fa-download me-2"></i>Download v3.0.3</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </nav>
        </header>
        @if (Document.GetBool(Constants.NoSidebar) || Document.GetBool(Constants.ShowInSidebar))
        {
            <main id="noSidebar">
                @RenderBody()
            </main>
        }
        else
        {
            <main>
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-3 col-xl-2 p-0 text-bg-body-secondary border-end">
                            <div id="leftSidebarNav" class="sticky-md-top collapse-y-height">
                                @{
                                   IDocument root = OutputPages["index.html"].FirstOrDefault();
                                }
                                <nav class="navbar navbar-expand-md p-0">
                                    <div id="leftSidebar" class="collapse navbar-collapse">
                                        <ul class="navbar-nav">
                                            <li class="nav-item nav-item-green">
                                                @if(root.ShowLink() && Document.GetBool(Constants.ShowInSidebar))
                                                {
                                                    <a class="nav-link ps-c2 @(Document.IdEquals(root) ? "active active-page" : null)" href="@root.GetLink()">@root.GetTitle()</a>
                                                }
                                            </li>
                                            @foreach (IDocument document in OutputPages.GetChildrenOf(root).OnlyVisible())
                                            {
                                                DocumentList<IDocument> documentChildren = OutputPages.GetChildrenOf(document);
                                                @if(documentChildren.Any()) {
                                                    <li class="nav-item nav-item-green @(Document.IdEquals(document) || OutputPages.GetDescendantsOf(document).Any(x => Document.IdEquals(x)) ? "active" : null)">
                                                        <div class="nav-link nav-link-collapse d-flex @(Document.IdEquals(document) || OutputPages.GetDescendantsOf(document).Any(x => Document.IdEquals(x)) ? "active" : null) @(Document.IdEquals(document) ? "active-page" : null)">
                                                            <button class="btn btn-collapse rounded-0 border-0 ps-3 @(Document.IdEquals(document) || OutputPages.GetDescendantsOf(document).Any(x => Document.IdEquals(x)) ? null : "collapsed")" type="button" data-bs-toggle="collapse" aria-expanded="@(Document.IdEquals(document) || OutputPages.GetDescendantsOf(document).Any(x => Document.IdEquals(x)) ? "true" : "false")" aria-controls="id-@document.Id" aria-label="collapse or expand navigation" href="#id-@document.Id"></button>
                                                            <a href="@document.GetLink()">@document.GetTitle()</a>
                                                        </div>
                                                        <div class="collapse @(Document.IdEquals(document) || OutputPages.GetDescendantsOf(document).Any(x => Document.IdEquals(x)) ? "show" : null)" id="id-@document.Id">
                                                            <ul class="navbar-nav">
                                                                @foreach (IDocument child in documentChildren.OnlyVisible())
                                                                {
                                                                    @if(OutputPages.GetChildrenOf(child).Any())
                                                                    {
                                                                        <li class="nav-item">
                                                                            <div class="nav-link nav-link-collapse d-flex @(Document.IdEquals(child) || OutputPages.GetDescendantsOf(child).Any(x => Document.IdEquals(x)) ? "active" : null) @(Document.IdEquals(child) ? "active-page" : null)">
                                                                                <button class="btn btn-collapse rounded-0 border-0 ps-c2 @(Document.IdEquals(child) || OutputPages.GetDescendantsOf(child).Any(x => Document.IdEquals(x)) ? null : "collapsed")" type="button" data-bs-toggle="collapse" aria-expanded="@(Document.IdEquals(child) || OutputPages.GetDescendantsOf(child).Any(x => Document.IdEquals(x)) ? "true" : "false")" aria-controls="id-@child.Id" aria-label="collapse or expand navigation" href="#id-@child.Id"></button>
                                                                                <a href="@child.GetLink()">@child.GetTitle()</a>
                                                                            </div>
                                                                            <div class="collapse @(Document.IdEquals(child) || OutputPages.GetDescendantsOf(child).Any(x => Document.IdEquals(x)) ? "show" : null)" id="id-@child.Id">
                                                                                <ul class="navbar-nav">
                                                                                    @foreach (IDocument grandChild in OutputPages.GetChildrenOf(child).OnlyVisible())
                                                                                    {
                                                                                        @if(OutputPages.GetChildrenOf(grandChild).Any())
                                                                                        {
                                                                                            <li class="nav-item">
                                                                                                <div class="nav-link nav-link-collapse d-flex @(Document.IdEquals(grandChild) || OutputPages.GetDescendantsOf(grandChild).Any(x => Document.IdEquals(x)) ? "active" : null) @(Document.IdEquals(grandChild) ? "active-page" : null)">
                                                                                                    <button class="btn btn-collapse rounded-0 border-0 ps-5 @(Document.IdEquals(grandChild) || OutputPages.GetDescendantsOf(grandChild).Any(x => Document.IdEquals(x)) ? null : "collapsed")" type="button" data-bs-toggle="collapse" aria-expanded="@(Document.IdEquals(grandChild) || OutputPages.GetDescendantsOf(grandChild).Any(x => Document.IdEquals(x)) ? "true" : "false")" aria-controls="id-@grandChild.Id" aria-label="collapse or expand navigation" href="#id-@grandChild.Id"></button>
                                                                                                    <a href="@grandChild.GetLink()">@grandChild.GetTitle()</a>
                                                                                                </div>
                                                                                                <div class="collapse @(Document.IdEquals(grandChild) || OutputPages.GetDescendantsOf(grandChild).Any(x => Document.IdEquals(x)) ? "show" : null)" id="id-@grandChild.Id">
                                                                                                    <ul class="navbar-nav">
                                                                                                        @foreach (IDocument greatGrandChild in OutputPages.GetChildrenOf(grandChild).OnlyVisible())
                                                                                                        {
                                                                                                            @if(OutputPages.GetChildrenOf(greatGrandChild).Any())
                                                                                                            {
                                                                                                                <li class="nav-item">
                                                                                                                    <div class="nav-link nav-link-collapse d-flex @(Document.IdEquals(greatGrandChild) || OutputPages.GetDescendantsOf(greatGrandChild).Any(x => Document.IdEquals(x)) ? "active" : null) @(Document.IdEquals(greatGrandChild) ? "active-page" : null)">
                                                                                                                        <button class="btn btn-collapse rounded-0 border-0 ps-c4 @(Document.IdEquals(greatGrandChild) || OutputPages.GetDescendantsOf(greatGrandChild).Any(x => Document.IdEquals(x)) ? null : "collapsed")" type="button" data-bs-toggle="collapse" aria-expanded="@(Document.IdEquals(greatGrandChild) || OutputPages.GetDescendantsOf(greatGrandChild).Any(x => Document.IdEquals(x)) ? "true" : "false")" aria-controls="id-@greatGrandChild.Id" aria-label="collapse or expand navigation" href="#id-@greatGrandChild.Id"></button>
                                                                                                                        <a href="@greatGrandChild.GetLink()">@greatGrandChild.GetTitle()</a>
                                                                                                                    </div>
                                                                                                                    <div class="collapse @(Document.IdEquals(greatGrandChild) || OutputPages.GetDescendantsOf(greatGrandChild).Any(x => Document.IdEquals(x)) ? "show" : null)" id="id-@greatGrandChild.Id">
                                                                                                                        <ul class="navbar-nav">
                                                                                                                            @foreach (IDocument greatGreatGrandChild in OutputPages.GetChildrenOf(greatGrandChild).OnlyVisible())
                                                                                                                            {
                                                                                                                                @if(OutputPages.GetChildrenOf(greatGreatGrandChild).Any())
                                                                                                                                {
                                                                                                                                    <li class="nav-item">
                                                                                                                                        <div class="nav-link nav-link-collapse d-flex @(Document.IdEquals(greatGreatGrandChild) || OutputPages.GetDescendantsOf(greatGreatGrandChild).Any(x => Document.IdEquals(x)) ? "active" : null) @(Document.IdEquals(greatGreatGrandChild) ? "active-page" : null)">
                                                                                                                                            <button class="btn btn-collapse rounded-0 border-0 ps-c5 @(Document.IdEquals(greatGreatGrandChild) || OutputPages.GetDescendantsOf(greatGreatGrandChild).Any(x => Document.IdEquals(x)) ? null : "collapsed")" type="button" data-bs-toggle="collapse" aria-expanded="@(Document.IdEquals(greatGreatGrandChild) || OutputPages.GetDescendantsOf(greatGreatGrandChild).Any(x => Document.IdEquals(x)) ? "true" : "false")" aria-controls="id-@greatGreatGrandChild.Id" aria-label="collapse or expand navigation" href="#id-@greatGreatGrandChild.Id"></button>
                                                                                                                                            <a href="@greatGreatGrandChild.GetLink()">@greatGreatGrandChild.GetTitle()</a>
                                                                                                                                        </div>
                                                                                                                                        <div class="collapse @(Document.IdEquals(greatGreatGrandChild) || OutputPages.GetDescendantsOf(greatGreatGrandChild).Any(x => Document.IdEquals(x)) ? "show" : null)" id="id-@greatGreatGrandChild.Id">
                                                                                                                                            <ul class="navbar-nav">
                                                                                                                                                @foreach (IDocument greatGreatGreatGrandChild in OutputPages.GetChildrenOf(greatGreatGrandChild).OnlyVisible())
                                                                                                                                                {
                                                                                                                                                    <li class="nav-item">
                                                                                                                                                        <a class="nav-link ps-c7 @(Document.IdEquals(greatGreatGreatGrandChild) ? "active active-page" : null)" href="@greatGreatGreatGrandChild.GetLink()">@greatGreatGreatGrandChild.GetTitle()</a>
                                                                                                                                                    </li>
                                                                                                                                                }
                                                                                                                                            </ul>
                                                                                                                                        </div>
                                                                                                                                    </li>
                                                                                                                                }
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    <li class="nav-item">
                                                                                                                                        <a class="nav-link ps-c6 @(Document.IdEquals(greatGreatGrandChild) ? "active active-page" : null)" href="@greatGreatGrandChild.GetLink()">@greatGreatGrandChild.GetTitle()</a>
                                                                                                                                    </li>
                                                                                                                                }
                                                                                                                            }
                                                                                                                        </ul>
                                                                                                                    </div>
                                                                                                                </li>
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                <li class="nav-item">
                                                                                                                    <a class="nav-link ps-c5 @(Document.IdEquals(greatGrandChild) ? "active active-page" : null)" href="@greatGrandChild.GetLink()">@greatGrandChild.GetTitle()</a>
                                                                                                                </li>
                                                                                                            }
                                                                                                        }
                                                                                                    </ul>
                                                                                                </div>
                                                                                            </li>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <li class="nav-item">
                                                                                                <a class="nav-link ps-c4 @(Document.IdEquals(grandChild) ? "active active-page" : null)" href="@grandChild.GetLink()">@grandChild.GetTitle()</a>
                                                                                            </li>
                                                                                        }
                                                                                    }
                                                                                </ul>
                                                                            </div>
                                                                        </li>
                                                                    }
                                                                    else
                                                                    {
                                                                        <li class="nav-item">
                                                                            <a class="nav-link ps-5 @(Document.IdEquals(child) ? "active active-page" : null)" href="@child.GetLink()">@child.GetTitle()</a>
                                                                        </li>
                                                                    }
                                                                }
                                                            </ul>
                                                        </div>
                                                    </li>
                                                }
                                                else
                                                {
                                                    <li class="nav-item nav-item-green">
                                                        <a class="nav-link ps-c2 @(Document.IdEquals(document) ? "active active-page" : null)" href="@document.GetLink()">@document.GetTitle()</a>
                                                    </li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                </nav>
                            </div>
                        </div>
                        <div class="col-md-9 col-xl-10 py-3 py-md-5 px-md-4 mx-auto">
                            <div class="container d-xl-none">
                                @Html.Partial("_Breadcrumbs")
                            </div>
                            <div class="container">
                                <div class="row">
                                    <div id="mainContent" class="anchorjs-container col-xl-10 order-2 order-xl-1">
                                        <div class="d-none d-xl-block">
                                            @Html.Partial("_Breadcrumbs")
                                        </div>
                                        @RenderBody()
                                        @if (!Document.GetBool("HideChildPages", false))
                                        {
                                            @Html.Partial("_ChildPages")
                                        }
                                    </div>
                                    @{
                                        IReadOnlyList<IDocument> headings = Document.GetDocumentList(Statiq.Html.HtmlKeys.Headings);
                                        if (headings.Count > 1)
                                        {
                                            <div id="rightSidebarNav" class="col-xl-2 ps-xl-3 order-1 order-xl-2">
                                                <button class="btn btn-link btn-collapse fw-bold w-100 d-xl-none mb-2" type="button" data-bs-toggle="collapse" data-bs-target="#rightSidebar" aria-expanded="false" aria-controls="rightSidebar">Jump to Section</button>
                                                <div id="rightSidebar" class="sticky-xl-top collapse collapse-lg">
                                                    <div class="card card-body py-0 px-xl-0 mb-3 border-0">
                                                        @if (Document.ContainsKey("EditLink"))
                                                        {
                                                            <p class="fw-bold pt-3"><a href="@Document.GetString("EditLink")"><i class="fa-solid fa-pencil" aria-hidden="true"></i> Edit This Page</a></p>
                                                            <hr class="m-0" />
                                                        }
                                                        <p class="fw-bold pt-3 mb-2">On This Page</p>
                                                        <ul class="nav nav-scrollspy flex-column pb-3">
                                                            @foreach (IDocument heading in headings)
                                                            {
                                                                var level = "";
                                                                switch(heading.GetString(Statiq.Html.HtmlKeys.Level))
                                                                {
                                                                    case "1":
                                                                        level = "d-none";
                                                                        break;
                                                                    case "3":
                                                                        level = "ps-4";
                                                                        break;
                                                                    case "4":
                                                                        level = "ps-5";
                                                                        break;
                                                                    case "5":
                                                                        level = "ps-c4-5";
                                                                        break;
                                                                    default:
                                                                        level = level;
                                                                        break;
                                                                }
                                                                <li class="nav-item"><a class="nav-link @level" href="#@(heading.GetString(Statiq.Html.HtmlKeys.HeadingId))">@(await heading.GetContentStringAsync())</a></li>
                                                            }
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
        }
        <footer class="flex-shrink-0">
            <div class="text-bg-body-secondary border-top text-center p-3">
                <span class="small">© 2018 - @DateTime.Today.Year <a class="link-theme" href="https://chocolatey.org/">Chocolatey Software, Inc.</a></span><br />
                <span class="small">© 2012 - 2018 <a class="link-theme" href="https://www.hurryupandwait.io/">Matt Wrock</a></span><br />
                <span class="small">Deployed from <a class="link-theme" href="https://github.com/chocolatey/boxstarter.org/commit/@VersionUtilities.GetSha()">@VersionUtilities.GetCommit()</a></span><br />
                <span class="small"><a class="link-theme" href="https://statiq.dev/">Generated by Statiq</a></span>
            </div>
            <div id="cookieNoticeAlert" class="alert alert-primary alert-dismissible alert-dismissible-center alert-btn-center fade show d-none" role="alert">
                <p class="mb-0"><strong>boxstarter.org uses cookies to enhance the user experience of the site.</strong></p>
                <button type="button" class="btn btn-bg-body btn-sm d-none d-md-inline-block" data-bs-dismiss="alert" aria-label="Close">I accept</button>
                <button type="button" class="btn btn-bg-body d-md-none" data-bs-dismiss="alert" aria-label="Close">I accept</button>
            </div>
        </footer>
        <script type="text/javascript" src='@Context.GetLink("/assets/js/bootstrap.bundle.min.js")'></script>
        <script type="text/javascript" src='@Context.GetLink("/assets/js/boxstarter.min.js")'></script>
    </body>
</html>